image: $REGISTRY_CI/gitlab-ci-base:buster

stages:
  - build-test
  - test
  - package
  - release
  - build
  - deploy

variables:
  GIT_DEPTH: 10

#########################
####  TEMPLATE      ####
########################

.test_template: &test_definition
  stage: test
  tags:
    - medium
  allow_failure: false
  variables:
    PS_VERSION: 1.7.8.4
    PS_DOMAIN: web
    DB_NAME: prestashop17

    ADMIN_MAIL: demo@hipay.com
    ADMIN_PASSWD: hipay123
    PS_ERASE_DB: 1
    PS_INSTALL_DB: 1
    PS_LANGUAGE: fr
    PS_COUNTRY: fr
    PS_INSTALL_AUTO: 1
    PS_DEV_MODE: 0
    PS_FOLDER_ADMIN: admin-hipay
    PS_FOLDER_INSTALL: installOLD
    PS_HANDLE_DYNAMIC_DOMAIN: 0
    DB_SERVER: database
    DB_USER: root
    DB_PASSWD: admin
    MYSQL_HOST: database
    MYSQL_ROOT_PASSWORD: admin
    HIPAY_INSTALL_AUTO: 1
    ENVIRONMENT: stage
    XDEBUG_CONFIG: 172.16.44.35
    remote_host: 172.16.44.35
    HIPAY_API_USER_TEST: $HIPAY_API_USER_TEST
    HIPAY_API_PASSWORD_TEST: $HIPAY_API_PASSWORD_TEST
    HIPAY_TOKENJS_PUBLICKEY_TEST: $HIPAY_TOKENJS_PUBLICKEY_TEST
    HIPAY_TOKENJS_USERNAME_TEST: $HIPAY_TOKENJS_USERNAME_TEST
    HIPAY_SECRET_PASSPHRASE_TEST: $HIPAY_SECRET_PASSPHRASE_TEST
    HIPAY_API_MOTO_USER_TEST: $HIPAY_API_USER_TEST
    HIPAY_API_MOTO_PASSWORD_TEST: $HIPAY_API_PASSWORD_TEST
    HIPAY_MOTO_SECRET_PASSPHRASE_TEST: $HIPAY_SECRET_PASSPHRASE_TEST
    HIPAY_API_APPLE_PAY_USER_TEST: $HIPAY_APPLEPAY_USERNAME_TEST
    HIPAY_API_APPLE_PAY_PASSWORD_TEST: $HIPAY_APPLEPAY_PASSWORD_TEST
    HIPAY_APPLE_PAY_PASSPHRASE_TEST: $HIPAY_APPLEPAY_SECRET_PASSPHRASE_TEST
    HIPAY_TOKENJS_APPLE_PAY_PASSWORD_TEST: $HIPAY_TOKENJS_PUBLICKEY_TEST
    HIPAY_TOKENJS_APPLE_PAY_USERNAME_TEST: $HIPAY_TOKENJS_USERNAME_TEST
    PI_DATA_URL: $PI_CI_DATA_URL
    HIPAY_GITHUB_ACCESS_TOKEN: $GITHUB_TOKEN

  services:
    - name: $REGISTRY_CI/test-jobs-${DOCKER_STACK}-${DOCKER_SERVICE}_web17:${CI_COMMIT_REF_SLUG}
      alias: web
    - name: mysql:5.7
      alias: database
  artifacts:
    paths:
      - bin/tests/errors
      - bin/tests/tests-cypress/cypress/videos
      - bin/tests/tests-cypress/cypress/screenshots
    when: always
  except:
    variables:
      - $ONLY_DEPLOY

.login_to_registry: &login-to-registry
  before_script:
    - 'mkdir /tmp'
    - 'touch /tmp/credentials.json'
    - 'echo ${SA_REGISTRY_CD} > /tmp/credentials.json'
    - 'export GOOGLE_APPLICATION_CREDENTIALS=/tmp/credentials.json'

.login_to_cd: &login-to-cd
  before_script:
    # Connect GCP with deploy service account
    - mkdir -p /tmp
    - touch /tmp/credentials.json
    - echo ${SA_DEPLOY_CD} > /tmp/credentials.json
    - gcloud auth activate-service-account "${SA_DEPLOY_NAME}" --key-file="/tmp/credentials.json"
    - gcloud config set project "${GCP_CD_PROJECT_ID}"
    - gcloud config set compute/zone "${GCP_CD_CLUSTER_REGION}"
    - gcloud container clusters get-credentials "${GCP_CD_CLUSTER_NAME}"

.build-prestashop:
  <<: *login-to-registry
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.6.0-debug
  needs: []
  rules:
    - if: $ONLY_DEPLOY
      when: on_success
    - if: $CI_PIPELINE_SOURCE == "push"
      when: manual
  script:
    - /kaniko/executor
      --cache=true
      --context "dir://${CI_PROJECT_DIR}"
      --dockerfile "./bin/docker/images/prestashop/Dockerfile${PS_VERSION}"
      --destination "${REGISTRY_CD}/${DOCKER_STACK}-${DOCKER_SERVICE}-web${PS_VERSION}:${CI_COMMIT_REF_SLUG}"
  tags:
    - small

.deploy2recette-prestashop:
  <<: *login-to-cd
  stage: deploy
  rules:
    - if: $ONLY_DEPLOY
      when: on_success
    - if: $CI_PIPELINE_SOURCE == "push"
      when: manual
  image: $REGISTRY_CI/gitlab-ci-base:deployment
  variables:
    GPC_ACCOUNT: ''
    RELEASE_NAME: ${DOCKER_STACK}-${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${PS_VERSION}
  script:
    - echo $RELEASE_NAME
    - >
      helm install $RELEASE_NAME ./bin/docker/kubernetes/helm/
      --namespace default
      --set prestashop_image="${REGISTRY_CD}/${DOCKER_STACK}-${DOCKER_SERVICE}-web${PS_VERSION}"
      --set prestashop_tag="${CI_COMMIT_REF_SLUG}"
      --set prestashop_url="${DOCKER_STACK}-${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${PS_VERSION}.${URL_CD}"
      --set ps_version="${PS_FULL_VERSION}"
      --set ps_domain="${DOCKER_STACK}-${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${PS_VERSION}.${URL_CD}"
      --set db_name="prestashop${PS_VERSION}"
      --set hipay_api_user_test="$HIPAY_API_USER_RE7"
      --set hipay_api_password_test="$HIPAY_API_PASSWORD_RE7"
      --set hipay_tokenjs_username_test="$HIPAY_TOKENJS_USERNAME_RE7"
      --set hipay_tokenjs_publickey_test="$HIPAY_TOKENJS_PUBLICKEY_RE7"
      --set hipay_secret_passphrase_test="$HIPAY_SECRET_PASSPHRASE_RE7"
      --set hipay_api_moto_user_test=""
      --set hipay_api_moto_password_test=""
      --set hipay_moto_secret_passphrase_test=""
      --set hipay_api_apple_pay_user_test="$HIPAY_APPLEPAY_USERNAME_RE7"
      --set hipay_api_apple_pay_password_test="$HIPAY_APPLEPAY_PASSWORD_RE7"
      --set hipay_apple_pay_passphrase_test="$HIPAY_APPLEPAY_SECRET_PASSPHRASE_RE7"
      --set hipay_tokenjs_apple_pay_username_test="$HIPAY_APPLEPAY_TOKENJS_USERNAME_RE7"
      --set hipay_tokenjs_apple_pay_password_test="$HIPAY_APPLEPAY_TOKENJS_PUBLICKEY_RE7"
      --set pi_data_url="$PI_CI_DATA_URL"
      --set hipay_github_access_token="$GITHUB_TOKEN"
  allow_failure: true
  tags:
    - small

.stop_review-prestashop:
  <<: *login-to-cd
  stage: deploy
  image: $REGISTRY_CI/gitlab-ci-base:deployment
  variables:
    GIT_STRATEGY: none
    RELEASE_NAME: ${DOCKER_STACK}-${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${PS_VERSION}
  script:
    - helm uninstall $RELEASE_NAME --namespace=default
  rules:
    - if: $ONLY_DEPLOY
      when: manual
    - if: $CI_PIPELINE_SOURCE == "push"
      when: manual
  environment:
    name: review-${PS_VERSION}/${CI_COMMIT_REF_SLUG}
    action: stop
  tags:
    - small

#########################
####  JOBS          ####
########################

build-test:
  stage: build-test
  image:
    name: gcr.io/kaniko-project/executor:v1.6.0-debug
  script:
    - /kaniko/executor
      --cache=true
      --context "dir://${CI_PROJECT_DIR}"
      --dockerfile "./bin/docker/images/prestashop/Dockerfile17"
      --destination "$REGISTRY_CI/test-jobs-${DOCKER_STACK}-${DOCKER_SERVICE}_web17:${CI_COMMIT_REF_SLUG}"
  except:
    variables:
      - $ONLY_DEPLOY
  tags:
    - small

.test-casper-17-1:
  <<: *test_definition
  script:
    - curl --retry 20 --retry-delay 10 --retry-connrefused --output /dev/null http://web
    - export OPENSSL_CONF=/etc/ssl/
    - sh bin/tests/casper_run_circle.sh 0 ps17 http://web
  retry: 2

.test-casper-17-2:
  <<: *test_definition
  script:
    - curl --retry 20 --retry-delay 10 --retry-connrefused --output /dev/null http://web
    - export OPENSSL_CONF=/etc/ssl/
    - sh bin/tests/casper_run_circle.sh 1 ps17 http://web
  retry: 2

.test-cypress-17-1:
  <<: *test_definition
  script:
    - cp ./bin/tests/tests-cypress/.npmrc.sample ./bin/tests/tests-cypress/.npmrc
    - cd bin/tests/tests-cypress
    - yarn install
    - curl --retry 20 --retry-delay 10 --retry-connrefused --output /dev/null http://web
    - bash /tools/run-cypress-test.sh -f $TESTS_FOLDERS_1 -e $EXCLUDED_TEST_FILES --config baseUrl=http://web --env $CYPRESS_ENV
  retry: 2

package:
  stage: package
  before_script:
    - apt-get install -y zip sshpass
  script:
    - echo "Package module $CI_COMMIT_REF_SLUG"
    - cd src/hipay_enterprise
    - composer install --no-dev
    - cd ../..
    - ./package-ready-for-prestashop/builder/module_builder.sh -v $CI_COMMIT_REF_SLUG
  #    - chmod u+x bin/deployment/deploy_package.sh
  #    - ./bin/deployment/deploy_package.sh
  artifacts:
    paths:
      - ./package-ready-for-prestashop
  tags:
    - small
  except:
    variables:
      - $ONLY_DEPLOY

# Job to get JIRA tickets of the release
get-jira-tickets:
  stage: release
  image: node:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      node <<EOF
      (async () => {
        try {
          const gitlabResponse = await fetch("${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/merge_requests?state=merged&target_branch=develop&milestone=${CI_COMMIT_TAG}", {
            method: "GET",
            headers: {
              "Private-Token": "$GITLAB_API_TOKEN"
            }
          });

          if (!gitlabResponse.ok) {
            const err = await gitlabResponse.json();
            throw new Error("Failed to send GitLab request: " + JSON.stringify(err));
          }

          const mergeRequests = await gitlabResponse.json();
          const tickets = [];

          mergeRequests.forEach((mr) => {
            const matches = mr.source_branch.match(/EC-\d+/);
            if(matches?.length) {
              tickets.push(matches[0].toUpperCase());
            }
          });

          console.log("tickets", tickets);

          const payload = {
            "event_type": "trigger-artifact-workflow",
            "client_payload": {
              "tickets": tickets
            }
          };

          console.log("payload", JSON.stringify(payload));

          const githubResponse = await fetch("https://api.github.com/repos/${GITHUB_ORGANIZATION}/${GITHUB_PROJECT}/dispatches", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              "Authorization": "Bearer ${GITHUB_TOKEN}",
              "User-Agent": "Node.js"
            },
            body: JSON.stringify(payload)
          });

          if (!githubResponse.ok) {
            const err = await githubResponse.json();
            throw new Error("Failed to send GitHub event: " + JSON.stringify(err));
          }
        } catch (error) {
          throw new Error("Request error: " + error.message);
        }
      })();
      EOF

# Release note job
release-job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - get-jira-tickets
  variables:
    TEMP_CHANGELOG_FILE: 'release_changelog.txt'
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      # Extract changelog part according to tag version
      CHANGELOG=$(awk -v version="## Version $CI_COMMIT_TAG" '
        $0 ~ version {printit=1; next}
        printit && /^## / {exit}
        printit {print}
      ' CHANGELOG.md)

      {
        echo "# CHANGE LOG"
        echo "$CHANGELOG"
      } > "$TEMP_CHANGELOG_FILE"
    - cat "$TEMP_CHANGELOG_FILE"
  release:
    tag_name: $CI_COMMIT_TAG
    name: Version $CI_COMMIT_TAG
    description: '$TEMP_CHANGELOG_FILE'
    milestones:
      - $CI_COMMIT_TAG

build-prestashop16:
  variables:
    PS_VERSION: 16
  extends: .build-prestashop

build-prestashop17:
  variables:
    PS_VERSION: 17
  extends: .build-prestashop

build-prestashop8:
  variables:
    PS_VERSION: 8
  extends: .build-prestashop

deploy2recette-prestashop16:
  variables:
    PS_VERSION: 16
    PS_FULL_VERSION: 1.6.1.24
  extends: .deploy2recette-prestashop
  needs:
    - build-prestashop16
  environment:
    name: review-${PS_VERSION}/${CI_COMMIT_REF_SLUG}
    url: https://${DOCKER_STACK}-${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${PS_VERSION}.${URL_CD}
    on_stop: stop_review-prestashop16

deploy2recette-prestashop17:
  variables:
    PS_VERSION: 17
    PS_FULL_VERSION: 1.7.8.4
  extends: .deploy2recette-prestashop
  needs:
    - build-prestashop17
  environment:
    name: review-${PS_VERSION}/${CI_COMMIT_REF_SLUG}
    url: https://${DOCKER_STACK}-${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${PS_VERSION}.${URL_CD}
    on_stop: stop_review-prestashop17

deploy2recette-prestashop8:
  variables:
    PS_VERSION: 8
    PS_FULL_VERSION: 8.0.3
  extends: .deploy2recette-prestashop
  needs:
    - build-prestashop8
  environment:
    name: review-${PS_VERSION}/${CI_COMMIT_REF_SLUG}
    url: https://${DOCKER_STACK}-${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${PS_VERSION}.${URL_CD}
    on_stop: stop_review-prestashop8

stop_review-prestashop16:
  variables:
    PS_VERSION: 16
  needs:
    - deploy2recette-prestashop16
  extends: .stop_review-prestashop

stop_review-prestashop17:
  variables:
    PS_VERSION: 17
  needs:
    - deploy2recette-prestashop17
  extends: .stop_review-prestashop

stop_review-prestashop8:
  variables:
    PS_VERSION: 8
  needs:
    - deploy2recette-prestashop8
  extends: .stop_review-prestashop

version: 2
jobs:
  build:
    docker:
      - image: ubuntu:16.04
    environment:
      TZ: "/usr/share/zoneinfo/Europe/paris"
    steps:
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            uname -a
            apt-get update && apt-get install -y curl wget bzip2 npm python-pip php php7.0-xml sshpass vim libfontconfig git
            curl -sL https://deb.nodesource.com/setup_9.x | bash - \
      - checkout
      - run:
          name: Install Docker client
          command: |
            ln -fs /usr/bin/nodejs /usr/bin/node
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Install Docker Compose
          command: pip install docker-compose
      - run:
          name: Install PhantomJS
          command: |
            wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
            tar xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2
            mv phantomjs-2.1.1-linux-x86_64 /bin/
            chmod a+x /bin/phantomjs-2.1.1-linux-x86_64
            ln -s --force /bin/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs
      - run:
          name: Install CasperJS & JUnit & Bower
          command: |
            npm install -g casperjs@1.1.3
            npm install -g junit-viewer
            npm install -g bower
      - run:
          name: Init
          command: |
            if  [[ -z $(docker network ls | grep outside) ]];  then docker network create outside; fi
            CI_JOB_ID=$CIRCLE_JOB_ID
            sed -i -e "s/{HIPAY_API_USER_TEST\}/$HIPAY_API_USER_TEST/" ./conf/env_file/stage_circle/env
            sed -i -e "s/{HIPAY_API_PASSWORD_TEST\}/$HIPAY_API_PASSWORD_TEST/" ./conf/env_file/stage_circle/env
            sed -i -e "s/{HIPAY_TOKENJS_PUBLICKEY_TEST\}/$HIPAY_TOKENJS_PUBLICKEY_TEST/" ./conf/env_file/stage_circle/env
            sed -i -e "s/{HIPAY_TOKENJS_USERNAME_TEST\}/$HIPAY_TOKENJS_USERNAME_TEST/" ./conf/env_file/stage_circle/env
            sed -i -e "s/{HIPAY_SECRET_PASSPHRASE_TEST\}/$HIPAY_SECRET_PASSPHRASE_TEST/" ./conf/env_file/stage_circle/env
            sed -i -e "s/{LOGIN_BACKEND\}/$LOGIN_BACKEND/" ./conf/env_file/stage_circle/test.env
            sed -i -e "s/{PASS_BACKEND\}/$PASS_BACKEND/" ./conf/env_file/stage_circle/test.env
            sed -i -e "s/{LOGIN_PAYPAL\}/$LOGIN_PAYPAL/" ./conf/env_file/stage_circle/test.env
            sed -i -e "s/{PASS_PAYPAL\}/$PASS_PAYPAL/" ./conf/env_file/stage_circle/test.env
            sh ./prestashop.sh init-stage-circle
            sleep 350
      - run:
          name: Test
          command: |
            MASTER_HOST=$(docker inspect --format '{{ .NetworkSettings.Networks.bridge.Gateway }}' hipay-enterprise-shop-ps17-stage)
            docker exec mysql-stage mysql -h localhost -padmin -e "update prestashop17.ps_shop_url set domain = '$MASTER_HOST:8087', domain_ssl = '$MASTER_HOST:8087'"
            curl --retry 10 --retry-delay 20 -v http://$MASTER_HOST:8087
            sh bin/tests/casper_run_circle.sh 0 ps17 http://$MASTER_HOST:8087/
      - store_artifacts:
          path: /bin/tests/errors/
          destination: tests
